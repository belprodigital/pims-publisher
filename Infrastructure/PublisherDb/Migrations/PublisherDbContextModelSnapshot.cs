// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PimsPublisher.Infrastructure.PublisherDb;

#nullable disable

namespace PimsPublisher.Infrastructure.PublisherDb.Migrations
{
    [DbContext(typeof(PublisherDbContext))]
    partial class PublisherDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PimsPublisher.Domains.Entities.SynchronizationAggregate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BatchSize")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("ModelCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TotalBatch")
                        .HasColumnType("int");

                    b.Property<int>("TotalItems")
                        .HasColumnType("int");

                    b.Property<int>("TotalSubmitted")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Synchronizations", (string)null);
                });

            modelBuilder.Entity("PimsPublisher.Domains.Entities.SynchronizationBatchEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BatchNo")
                        .HasColumnType("int");

                    b.Property<int>("BatchTotal")
                        .HasColumnType("int");

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModelCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Offset")
                        .HasColumnType("int");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("SyncId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SyncTotal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SyncId");

                    b.ToTable("SynchronizationBatches", (string)null);
                });

            modelBuilder.Entity("PimsPublisher.Domains.Entities.SynchronizationItemEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ItemId");

                    b.Property<Guid>("BatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BatchNo")
                        .HasColumnType("int");

                    b.Property<Guid>("SyncId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BatchId");

                    b.ToTable("SynchronizationItems", (string)null);
                });

            modelBuilder.Entity("PimsPublisher.Domains.Entities.SynchronizationBatchEntity", b =>
                {
                    b.HasOne("PimsPublisher.Domains.Entities.SynchronizationAggregate", null)
                        .WithMany("Batches")
                        .HasForeignKey("SyncId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PimsPublisher.Domains.Entities.SynchronizationItemEntity", b =>
                {
                    b.HasOne("PimsPublisher.Domains.Entities.SynchronizationBatchEntity", null)
                        .WithMany("Items")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PimsPublisher.Domains.Entities.SynchronizationRecord", "SyncRecord", b1 =>
                        {
                            b1.Property<Guid>("SynchronizationItemEntityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Keys")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Keys");

                            b1.Property<string>("Propterties")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Properties");

                            b1.HasKey("SynchronizationItemEntityId");

                            b1.ToTable("SynchronizationItems");

                            b1.WithOwner()
                                .HasForeignKey("SynchronizationItemEntityId");
                        });

                    b.Navigation("SyncRecord")
                        .IsRequired();
                });

            modelBuilder.Entity("PimsPublisher.Domains.Entities.SynchronizationAggregate", b =>
                {
                    b.Navigation("Batches");
                });

            modelBuilder.Entity("PimsPublisher.Domains.Entities.SynchronizationBatchEntity", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
